server:
  port: 8088
  servlet:
    context-path: /blog

spring:
  autoconfigure:
    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
  datasource:
    dynamic:
      primary: master #设置默认的数据源或者数据源组,默认值即为master
      strict: false #设置严格模式,默认false不启动. 启动后再为匹配到指定数据源时候回抛出异常,不启动会使用默认数据源.
      datasource:
        master:
          url: jdbc:mysql://103.45.172.175:3306/item?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
          username: root
          password: Alpha.1111
          driver-class-name: com.mysql.cj.jdbc.Driver
#        slave:
#          url: jdbc:mysql://10.99.160.208:3306/uptask?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
#          username: item
#          password: item
#          driver-class-name: com.mysql.cj.jdbc.Driver
        # 数据源配置
        druid:
          # druid连接池监控
          stat-view-servlet:
            enabled: true
            url-pattern: /druid/*
            login-username: admin
            login-password: admin
          # 初始化时建立物理连接的个数
          initial-size: 5
          # 最大连接池数量
          max-active: 30
          # 最小连接池数量
          min-idle: 5
          # 获取连接时最大等待时间，单位毫秒
          max-wait: 60000
          # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
          time-between-eviction-runs-millis: 60000
          # 连接保持空闲而不被驱逐的最小时间
          min-evictable-idle-time-millis: 300000
          # 用来检测连接是否有效的sql，要求是一个查询语句
          validation-query: SELECT 1 FROM DUAL
          # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
          test-while-idle: true
          # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
          test-on-borrow: false
          # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
          test-on-return: false
          # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
          pool-prepared-statements: true
          # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
          max-pool-prepared-statement-per-connection-size: 50
          # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
          filters: stat,wall
          # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
          connection-properties:
            druid.stat.mergeSql: true
            druid.stat.slowSqlMillis: 500
          # 合并多个DruidDataSource的监控数据
          use-global-data-source-stat: true
          filter:
            stat:
              log-slow-sql: true
              slow-sql-millis: 1000
              merge-sql: true
            wall:
              config:
                multi-statement-allow: true

  servlet:
    multipart:
      # 开启 multipart 上传功能
      enabled: true
      # 文件写入磁盘的阈值
      file-size-threshold: 2KB
      # 最大文件大小
      max-file-size: 200MB
      # 最大请求大小
      max-request-size: 215MB
DB:
  url: jdbc:mysql://103.45.172.175:3306/BlogDB?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC

#
#logging:
#  config: classpath:logback-spring.xml